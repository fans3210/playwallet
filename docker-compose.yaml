volumes:
  kafka_data:
  pg_data:
services:

  postgres:
    image: postgres
    restart: always
    container_name: walletpg
    ports:
      - "5432"
    environment:
      POSTGRES_PASSWORD: password
      PGPASSWORD: password
      POSTGRES_USER: admin
      POSTGRES_DB: playwallet
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./testdata/testdata.sql:/testdata.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: walletzookeeper
    ports:
      - "2181"
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  kafka:
    image: wurstmeister/kafka
    container_name: walletkafka
    ports:
      - "9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "sendconfirm:12:1,recvconfirm:12:1,cancel:12:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    volumes:
      - kafka_data:/var/run/docker.sock
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 3

  kafka_manager:
    platform: linux/amd64
    image: obsidiandynamics/kafdrop
    container_name: walletkmgr
    depends_on:
      - kafka
    ports:
      - "8181:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092

  playwallet:
    image: github.com/fans3210/playwallet
    container_name: playwallet
    build:
      dockerfile: Dockerfile
    ports:
      - "1323:1323"
